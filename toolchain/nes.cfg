MEMORY
{
    ZP:      start = $0000, size = $0100, type = rw, define = yes;
    RAM:     start = $0300, size = $0500, define = yes;

	HEADER:  start = $0000, size = $0010, fill = yes, file = %O;
	PRG_ROM: start = $8000, size = $8000, fill = yes, file = %O, define = yes;
	CHR_ROM: start = $0000, size = $2000, fill = yes, file = %O;
}

SEGMENTS
{
	HEADER:   load = HEADER,  type = ro;
	STARTUP:  load = PRG_ROM, type = ro;
	CODE:     load = PRG_ROM, type = ro, define = yes;
	RODATA:   load = PRG_ROM, type = ro, define = yes;
	DATA:     load = PRG_ROM, run = RAM, type = rw, define = yes;
	CHARS:    load = CHR_ROM, type = ro;
	VECTORS:  load = PRG_ROM, type = ro, start = $FFFA;
	ZEROPAGE: load = ZP,      type = zp;
	BSS:      load = RAM,     type = bss;
}

SYMBOLS {
    __STACK_SIZE__: type = weak, value = $0100;    # Defines the compilers stack as 1 page starting at $0700
    __STACK_START__: type = weak, value = $0700;
}
